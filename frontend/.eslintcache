[{"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\index.js":"1","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\App.js":"2","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\component\\Header.js":"4","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\component\\Footer.js":"5","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\component\\Product.js":"7","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\component\\Rating.js":"8","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\store.js":"10","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\reducers\\productReducer.js":"11","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\constants\\productConstants.js":"12","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\actions\\productAction.js":"13","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\component\\Message.js":"14","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\component\\Loader.js":"15","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\CartScreen.js":"16","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\reducers\\cartReducers.js":"17","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\constants\\cartConstants.js":"18","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\actions\\cartActions.js":"19","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\reducers\\userReducer.js":"20","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\constants\\userConstants.js":"21","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\loginScreen.js":"22","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\component\\FormContainer.js":"23","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\LoginScreen.js":"24","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\actions\\userAction.js":"25","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\RegisterScreen.js":"26","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\ProfileScreen.js":"27","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\ShippingScreen.js":"28","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\component\\CheckoutSteps.js":"29","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\PaymentScreen.js":"30","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js":"31","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\actions\\orderActions.js":"32","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\constants\\orderConstants.js":"33","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\reducers\\orderReducer.js":"34","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\OrderScreen.js":"35","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\UserScreen.js":"36","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\UserEditScreen.js":"37","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\ProductListScreen.js":"38"},{"size":599,"mtime":1612441260513,"results":"39","hashOfConfig":"40"},{"size":2075,"mtime":1619396950763,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"40"},{"size":2560,"mtime":1619396399651,"results":"43","hashOfConfig":"40"},{"size":330,"mtime":1611481456313,"results":"44","hashOfConfig":"40"},{"size":1062,"mtime":1613353242152,"results":"45","hashOfConfig":"40"},{"size":797,"mtime":1611486004551,"results":"46","hashOfConfig":"40"},{"size":1836,"mtime":1611484851254,"results":"47","hashOfConfig":"40"},{"size":3760,"mtime":1613360892639,"results":"48","hashOfConfig":"40"},{"size":1973,"mtime":1619398455908,"results":"49","hashOfConfig":"40"},{"size":1503,"mtime":1619399178551,"results":"50","hashOfConfig":"40"},{"size":571,"mtime":1619398817344,"results":"51","hashOfConfig":"40"},{"size":1969,"mtime":1619398879276,"results":"52","hashOfConfig":"40"},{"size":270,"mtime":1613457545295,"results":"53","hashOfConfig":"40"},{"size":425,"mtime":1613360971385,"results":"54","hashOfConfig":"40"},{"size":3689,"mtime":1613956230299,"results":"55","hashOfConfig":"40"},{"size":1189,"mtime":1615262264400,"results":"56","hashOfConfig":"40"},{"size":246,"mtime":1615262210566,"results":"57","hashOfConfig":"40"},{"size":1318,"mtime":1615262599889,"results":"58","hashOfConfig":"40"},{"size":3553,"mtime":1618641428636,"results":"59","hashOfConfig":"40"},{"size":1463,"mtime":1618641299538,"results":"60","hashOfConfig":"40"},{"size":387,"mtime":1614138075461,"results":"61","hashOfConfig":"40"},{"size":379,"mtime":1614138987123,"results":"62","hashOfConfig":"40"},{"size":2231,"mtime":1614143708138,"results":"63","hashOfConfig":"40"},{"size":6219,"mtime":1618641620182,"results":"64","hashOfConfig":"40"},{"size":3212,"mtime":1614700087345,"results":"65","hashOfConfig":"40"},{"size":5142,"mtime":1617928616793,"results":"66","hashOfConfig":"40"},{"size":2664,"mtime":1615260653364,"results":"67","hashOfConfig":"40"},{"size":1254,"mtime":1615260785740,"results":"68","hashOfConfig":"40"},{"size":1773,"mtime":1617061581130,"results":"69","hashOfConfig":"40"},{"size":5142,"mtime":1617884896228,"results":"70","hashOfConfig":"40"},{"size":3352,"mtime":1617927831692,"results":"71","hashOfConfig":"40"},{"size":818,"mtime":1617928768132,"results":"72","hashOfConfig":"40"},{"size":2015,"mtime":1617928739480,"results":"73","hashOfConfig":"40"},{"size":6639,"mtime":1617925437025,"results":"74","hashOfConfig":"40"},{"size":2828,"mtime":1618364809125,"results":"75","hashOfConfig":"40"},{"size":3230,"mtime":1618641894903,"results":"76","hashOfConfig":"40"},{"size":3255,"mtime":1619399619071,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1o5z2pk",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":1,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\index.js",[],["164","165"],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\App.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\component\\Header.js",["166"],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\component\\Footer.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\HomeScreen.js",["167"],"import React, { useState, useEffect } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport Product from \"../component/Product\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../actions/productAction\";\r\n\r\nimport Message from \"../component/Message\";\r\nimport Loader from \"../component/Loader\";\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Latest products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\component\\Product.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\component\\Rating.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\store.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\reducers\\productReducer.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\actions\\productAction.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\component\\Message.js",["168"],"import React, { Children } from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: \"info\",\r\n};\r\n\r\nexport default Message;\r\n","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\component\\Loader.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\actions\\cartActions.js",["169"],"import axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  CART_ADD_ITEMS,\r\n  CART_REMOVE_ITEMS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEMS,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEMS,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\reducers\\userReducer.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\loginScreen.js",["170","171","172","173","174","175","176","177"],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\component\\FormContainer.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\actions\\userAction.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\ProfileScreen.js",["178"],"import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../component/Message\";\r\nimport Loader from \"../component/Loader\";\r\n\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userAction\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  console.log(\"usee\", userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const ordersList = useSelector((state) => state.ordersList);\r\n  const { orders, loading: loadingOrders, error: errorOrders } = ordersList;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      console.log(user);\r\n      if (!user.name) {\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [history, userInfo, user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"password do not match\");\r\n    } else {\r\n      console.log(user);\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update User profile\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                 \r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\component\\CheckoutSteps.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js",["179","180"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Image, ListGroup, Col, Row, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../component/CheckoutSteps\";\r\nimport Message from \"../component/Message\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const { shippingAddress, cartItems, paymentMethod } = useSelector(\r\n    (state) => state.cart\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // Calculate\r\n\r\n  const addDecimals = (num) => {\r\n    return Math.round((num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  const itemsPrice = cartItems.reduce(\r\n    (acc, item) => acc + item.price * item.qty,\r\n    0\r\n  );\r\n\r\n  const shippingPrice = itemsPrice > 100 ? 0 : 100;\r\n  const taxPrice = addDecimals(Number(0.15 * itemsPrice.toFixed(2)));\r\n  const totalPrice = (\r\n    Number(itemsPrice) +\r\n    Number(shippingPrice) +\r\n    Number(taxPrice)\r\n  ).toFixed(0);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n\r\n  const { success, error, order } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n  }, [success, history]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cartItems,\r\n        shippingAddress: shippingAddress,\r\n        paymentMethod: paymentMethod,\r\n        itemsPrice: itemsPrice,\r\n        shippingPrice: shippingPrice,\r\n        taxPrice: taxPrice,\r\n        totalPrice: totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                {shippingAddress.address}, {shippingAddress.city},\r\n                {shippingAddress.country},{shippingAddress.postalCode}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Payment Method</h2>\r\n                <p>Method: {paymentMethod}</p>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Items</h2>\r\n                {cartItems.length === 0 ? (\r\n                  <Message>Your cart is empty</Message>\r\n                ) : (\r\n                  <ListGroup>\r\n                    {cartItems.map((item, i) => (\r\n                      <ListGroup.Item key={i}>\r\n                        <Row>\r\n                          <Col md={1}>\r\n                            <Image\r\n                              src={item.image}\r\n                              alt={item.name}\r\n                              fluid\r\n                              rounded\r\n                            />\r\n                          </Col>\r\n                          <Col>\r\n                            <Link to={`/product/${item.product}`}>\r\n                              {item.name}\r\n                            </Link>\r\n                          </Col>\r\n                          <Col md={4}>\r\n                            {item.qty} x {item.price} = ${item.qty * item.price}\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                  </ListGroup>\r\n                )}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping Price</Col>\r\n                  <Col>${shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant={\"danger\"}>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\actions\\orderActions.js",["181"],"import {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n} from \"../constants/orderConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\reducers\\orderReducer.js",["182"],"import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return { loading: false, order: action.payload };\r\n    case ORDER_DETAILS_REQUEST:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return { loading: false, success: true, order: action.payload };\r\n    case ORDER_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_PAY_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ORDER_PAY_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return { loading: false, orders: action.payload };\r\n    case ORDER_LIST_MY_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\OrderScreen.js",["183","184"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Image, ListGroup, Col, Row, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../component/Loader\";\r\nimport Message from \"../component/Message\";\r\nimport {\r\n  createOrder,\r\n  getOrderDetails,\r\n  payOrder,\r\n} from \"../actions/orderActions\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { ORDER_PAY_RESET } from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { loading, error, order } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n    if (!order || successPay) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, order]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  return loading ? (\r\n     <Loader />\r\n\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name:</strong>\r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email:</strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city},\r\n                {order.shippingAddress.country},\r\n                {order.shippingAddress.postalCode}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.DeliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Payment Method</h2>\r\n\r\n                <p>Method: {order.paymentMethod}</p>\r\n\r\n                {order.isPaid ? (\r\n                  <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                ) : (\r\n                  <Message variant='danger'>Not Paid</Message>\r\n                )}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Items</h2>\r\n                {order.orderItems.length === 0 ? (\r\n                  <Message>Order is empty</Message>\r\n                ) : (\r\n                  <ListGroup>\r\n                    {order.orderItems.map((item, i) => (\r\n                      <ListGroup.Item key={i}>\r\n                        <Row>\r\n                          <Col md={1}>\r\n                            <Image\r\n                              src={item.image}\r\n                              alt={item.name}\r\n                              fluid\r\n                              rounded\r\n                            />\r\n                          </Col>\r\n                          <Col>\r\n                            <Link to={`/product/${item.product}`}>\r\n                              {item.name}\r\n                            </Link>\r\n                          </Col>\r\n                          <Col md={4}>\r\n                            {item.qty} x {item.price} = ${item.qty * item.price}\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                  </ListGroup>\r\n                )}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping Price</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\UserScreen.js",[],"C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\UserEditScreen.js",["185"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../component/Message\";\r\nimport Loader from \"../component/Loader\";\r\nimport FormContainer from \"../component/FormContainer\";\r\nimport { getUserDetails, updateUser } from \"../actions/userAction\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, userId, user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userList' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","C:\\Users\\alistair\\Desktop\\git\\proshop\\frontend\\src\\screens\\ProductListScreen.js",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":5,"column":8,"nodeType":"192","messageId":"193","endLine":5,"endColumn":22},{"ruleId":"190","severity":1,"message":"194","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"195","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"196","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":21},{"ruleId":"190","severity":1,"message":"197","line":2,"column":8,"nodeType":"192","messageId":"193","endLine":2,"endColumn":14},{"ruleId":"190","severity":1,"message":"198","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":15},{"ruleId":"190","severity":1,"message":"199","line":6,"column":7,"nodeType":"192","messageId":"193","endLine":6,"endColumn":18},{"ruleId":"190","severity":1,"message":"200","line":7,"column":10,"nodeType":"192","messageId":"193","endLine":7,"endColumn":15},{"ruleId":"190","severity":1,"message":"201","line":7,"column":17,"nodeType":"192","messageId":"193","endLine":7,"endColumn":25},{"ruleId":"190","severity":1,"message":"202","line":8,"column":10,"nodeType":"192","messageId":"193","endLine":8,"endColumn":18},{"ruleId":"190","severity":1,"message":"203","line":8,"column":20,"nodeType":"192","messageId":"193","endLine":8,"endColumn":31},{"ruleId":"204","severity":2,"message":"205","line":13,"column":16,"nodeType":"192","messageId":"206","endLine":13,"endColumn":27},{"ruleId":"207","severity":1,"message":"208","line":43,"column":6,"nodeType":"209","endLine":43,"endColumn":31,"suggestions":"210"},{"ruleId":"190","severity":1,"message":"194","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"207","severity":1,"message":"211","line":43,"column":6,"nodeType":"209","endLine":43,"endColumn":24,"suggestions":"212"},{"ruleId":"190","severity":1,"message":"213","line":11,"column":3,"nodeType":"192","messageId":"193","endLine":11,"endColumn":18},{"ruleId":"214","severity":1,"message":"215","line":26,"column":5,"nodeType":"216","messageId":"217","endLine":27,"endColumn":56},{"ruleId":"190","severity":1,"message":"218","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":16},{"ruleId":"190","severity":1,"message":"219","line":8,"column":3,"nodeType":"192","messageId":"193","endLine":8,"endColumn":14},{"ruleId":"207","severity":1,"message":"220","line":43,"column":6,"nodeType":"209","endLine":43,"endColumn":30,"suggestions":"221"},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'NavbarCollapse' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Children' is defined but never used.","'useSelector' is defined but never used.","'loader' is defined but never used.","'Message' is defined but never used.","'LoginScreen' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","no-undef","'loginScreen' is not defined.","undef","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["224"],"React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["225"],"'ORDER_PAY_RESET' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'Button' is defined but never used.","'createOrder' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'successUpdate'. Either include them or remove the dependency array.",["226"],"no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [history, userInfo, user, dispatch]",{"range":"233","text":"234"},"Update the dependencies array to be: [success, history, order._id]",{"range":"235","text":"236"},"Update the dependencies array to be: [dispatch, userId, user, successUpdate, history]",{"range":"237","text":"238"},[1508,1533],"[history, userInfo, user, dispatch]",[1255,1273],"[success, history, order._id]",[1408,1432],"[dispatch, userId, user, successUpdate, history]"]